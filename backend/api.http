### ================================
### API Tests - Sistema Agrícola
### ================================
### Usa la extensión REST Client de VS Code
### o importa a Postman/Insomnia

@baseUrl = http://localhost:5000/api
@token = tu_token_aqui

### Health Check
GET http://localhost:5000/health

### ================================
### AUTENTICACIÓN
### ================================

### 1. Registro
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "nombre": "Usuario Test",
  "email": "test@test.com",
  "password": "123456"
}

### 2. Login
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "123456"
}

### 3. Login Admin (después de crear admin)
# @name loginAdmin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@sistema.com",
  "password": "admin123"
}

### 4. Verificar Token
GET {{baseUrl}}/auth/verify
Authorization: Bearer {{token}}

### 5. Logout
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{token}}

### 6. Forgot Password
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "test@test.com"
}

### 7. Reset Password
POST {{baseUrl}}/auth/reset-password
Content-Type: application/json

{
  "token": "token_del_email",
  "password": "nueva_password123"
}

### ================================
### CASOS DE ERROR
### ================================

### Login con credenciales incorrectas
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "password_incorrecta"
}

### Registro con email duplicado
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "nombre": "Otro Usuario",
  "email": "test@test.com",
  "password": "123456"
}

### Registro con password corta
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "nombre": "Usuario",
  "email": "nuevo@test.com",
  "password": "123"
}

### Registro con email inválido
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "nombre": "Usuario",
  "email": "email_invalido",
  "password": "123456"
}

### Verificar token sin autenticación
GET {{baseUrl}}/auth/verify

### Verificar token con token inválido
GET {{baseUrl}}/auth/verify
Authorization: Bearer token_invalido_12345

### ================================
### NOTAS
### ================================
# 
# 1. Reemplaza {{token}} con el token real que obtienes del login
# 2. Para usar la extensión REST Client:
#    - Instala "REST Client" en VS Code
#    - Haz clic en "Send Request" sobre cada petición
# 
# 3. Los tokens expiran en 7 días por defecto
# 
# 4. Códigos de respuesta esperados:
#    - 200: Éxito
#    - 201: Creado
#    - 400: Datos inválidos
#    - 401: No autenticado
#    - 404: No encontrado
#    - 409: Conflicto (email duplicado)
#    - 500: Error del servidor

